kVI[P==plist,model_ind]=k_hat
## Plot clustering estimate
#plotname=paste('./EmE/EmE',P,'_initS_1_linexam/VIestimate.pdf',sep="")
plotname=paste('./EmE/EmE',P,'_initS_1_linexam/VIestimate_v2.pdf',sep="")
pdf(plotname)
Xmean=apply(X,1,mean)
cl=c("black", "red", "green", "blue", "yellow", "orange", "magenta", "cyan", "gray","darkgray","blueviolet","darkmagenta","darkred", "darkorange", "darkorange4", "cornflowerblue", "darkolivegreen2", "darkolivegreen4", "brown","chartreuse","burlywood1", "violet","violetred","yellow4","tomato3","springgreen", "slateblue","tan","seashell","thistle" )
par(mfrow=c(1,1),mar=c(2.5,2.5,1.5,.5)+.1, mgp=c(1.5, .5, 0))
plot(Xmean,Y,xlab="x",ylab="y",ylim=c(min(Y)-.1,max(Y)+.1),cex.lab=1.6,font=2,font.lab=2,lwd=2)
for(j in 1:k_hat){
points(Xmean[config_vi==j], Y[config_vi==j],col=cl[j],pch=16,cex=1.5)
}
dev.off()
## Credible ball
cb=credibleball(config_vi, config)
summary(cb)
cb_size[P==plist,model_ind]=cb$dist.horiz
print(paste('VI_dist=',VI_dist[P==plist,model_ind],' CB size=',cb_size[P==plist,model_ind]))
## For Enriched model ONLY
config_vi_x=rep(0,N)
csvname=paste('./EmE/EmE',P,'_initS_1_linexam/covariate.csv',sep="")
configx=read.csv(csvname,header=F)
configx=as.matrix(configx)
#Remove burnin
configx=configx[(burnin+1):maxs,]
pind=which(P==plist)
kxVI[[pind]]=rep(0,k_hat)
for (j in 1:k_hat){
if (sum(config_vi==j)>1){
configj=matrix(config[,config_vi==j],S,sum(config_vi==j))
configxj=matrix(configx[,config_vi==j],S,sum(config_vi==j))
#relabel clusters
for (s in 1:S){
config_s=configj[s,]
labels_s=unique(config_s)
aux=0
for (h in 1:length(labels_s)){
configx_s=configxj[s,config_s==labels_s[h]]
labelsx_s=unique(configx_s)
for (l in 1:length(labelsx_s)){
configxj[s,config_s==labels_s[h]][configx_s==labelsx_s[l]]=aux+l
}
aux=aux+length(labelsx_s)
}
}
## Heat map of posterior similarity matrix
psmj=comp.psm(configxj)
#par(mfrow=c(1,1),mar=c(1.5,1.5,.5,.5)+.1, mgp=c(.5, .5, 0))
#plotpsm(psmj, xlab="Permuted observation index",ylab="Permuted observation index",xaxt="n",yaxt="n",cex.lab=1.2,font.lab=2)
#plotpsm(psmj, xlab="",ylab="")
## VI
outputj_vi=minVI(psmj,configxj,method=("all"),include.greedy=TRUE,suppress.comment = F)
configj_vi=outputj_vi$cl[1,]
kxVI[[pind]][j]=max(configj_vi)
#config_vi_x[config_vi==j]=configj_vi
# for (h in 1:max(configj_vi)) {
#   print(apply(matrix(Xall[config_vi==j&config_vi_x==h,1:P],sum(config_vi==j&config_vi_x==h),P),2,mean))
# }
# Xj=data.frame(x=Xall[config_vi==j,1:P])
# plot(outputj_vi,data=Xj)
}
else{
kxVI[[pind]][j]=1
}
}
print(paste('Number of x-clusters in each y-cluster=',kxVI[[pind]]))
#relabel clusters
for (s in 1:S){
config_s=config[s,]
labels_s=unique(config_s)
aux=0
for (h in 1:length(labels_s)){
configx_s=configx[s,config_s==labels_s[h]]
labelsx_s=unique(configx_s)
for (l in 1:length(labelsx_s)){
configx[s,config_s==labels_s[h]][configx_s==labelsx_s[l]]=aux+l
}
aux=aux+length(labelsx_s)
}
}
#plotname=paste('./EmE/EmE',P,'_initS_1_linexam/psm_x.pdf',sep="")
plotname=paste('./EmE/EmE',P,'_initS_1_linexam/psm_x_v2.pdf',sep="")
pdf(plotname)
psmx=comp.psm(configx)
plotpsm(psmx, xlab="",ylab="")
dev.off()
}
##################################
## for DP model
for (P in plist){
# Load matrix
csvname=paste('./JmE/JmE',P,'/feature.csv',sep="")
config=read.csv(csvname,header=F)
print(paste('For P=',P,', Iterations completed=',dim(config)[1],sep=''))
}
for (P in plist){
# Load matrix
csvname=paste('./JmE/JmE',P,'/feature.csv',sep="")
config=read.csv(csvname,header=F)
print(paste('For P=',P,', Iterations completed=',dim(config)[1],sep=''))
dataname=paste('./iso_santner',P,'_mixture_train.csv',sep="")
data=read.csv(dataname,header=F)
model_ind=1 # 1 for JmE and 2 for EmE
config=as.matrix(config)
Y=data[,P+1]
X=data[,1:P]
Y=as.matrix(Y)
X=as.matrix(X)
S=dim(config)[1]
N=dim(config)[2]
#Remove burnin
#burnin=min(1000,floor(S/2))
burnin=max(1000,floor(S/5))
if (S<2000){burnin=floor(S/2)}
#maxs=min(5000,S)
maxs=S
config=config[(burnin+1):maxs,]
S=dim(config)[1]
#relabel clusters
for (s in 1:S){
config_s=config[s,]
labels_s=unique(config_s)
for (j in 1:length(labels_s)){
config[s,config_s==labels_s[j]]=j
}
}
## Heat map of posterior similarity matrix
psm=comp.psm(config)
#plotname=paste('./EmE/EmE',P,'_initS_1_linexam/psm.pdf',sep="")
plotname=paste('./JmE/JmE',P,'/psm_v2.pdf',sep="")
pdf(plotname)
par(mfrow=c(1,1),mar=c(1.5,1.5,.5,.5)+.1, mgp=c(.5, .5, 0))
plotpsm(psm, xlab="Permuted observation index",ylab="Permuted observation index",xaxt="n",yaxt="n",cex.lab=1.4,font.lab=2)
dev.off()
## VI
output_vi=minVI(psm,config,method=("all"),include.greedy=TRUE,suppress.comment = F)
config_vi=output_vi$cl[1,]
print(paste('k_VI=',max(config_vi),sep=''))
config_evi=output_vi$value[1]
# Poster expected VI
VI_postexp[P==plist,model_ind]=VI(data[,P+2]+1,config)
# VI
VI_dist[P==plist,model_ind]=VI(data[,P+2]+1,matrix(config_vi,1,N))
# number of clusters in VI estimate
k_hat=max(config_vi)
kVI[P==plist,model_ind]=k_hat
## Plot clustering estimate
#plotname=paste('./EmE/EmE',P,'_initS_1_linexam/VIestimate.pdf',sep="")
plotname=paste('./JmE/JmE',P,'/VIestimate_v2.pdf',sep="")
pdf(plotname)
Xmean=apply(X,1,mean)
cl=c("black", "red", "green", "blue", "yellow", "orange", "magenta", "cyan", "gray","darkgray","blueviolet","darkmagenta","darkred", "darkorange", "darkorange4", "cornflowerblue", "darkolivegreen2", "darkolivegreen4", "brown","chartreuse","burlywood1", "violet","violetred","yellow4","tomato3","springgreen", "slateblue","tan","seashell","thistle" )
par(mfrow=c(1,1),mar=c(2.5,2.5,1.5,.5)+.1, mgp=c(1.5, .5, 0))
plot(Xmean,Y,xlab="x_avg",ylab="y",ylim=c(min(Y)-.1,max(Y)+.1),cex.lab=1.4,font=2,font.lab=2,lwd=2)
for(j in 1:k_hat){
points(Xmean[config_vi==j], Y[config_vi==j],col=cl[j],pch=16,cex=1.5)
}
dev.off()
## Credible ball
cb=credibleball(config_vi, config)
summary(cb)
cb_size[P==plist,model_ind]=cb$dist.horiz
print(paste('VI_dist=',VI_dist[P==plist,model_ind],' CB size=',cb_size[P==plist,model_ind]))
}
################################
load("~/Dropbox/MixtureOfExperts/demos/santner/Isotropic/EmElinear_p150_prior1.RData")
#Plot k
kxtot=rep(0,length(plist))
for (ind in 1:length(plist)){
kxtot[ind]=sum(kxVI[[ind]])
}
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,kVI[,2],type='b',col=2, ylim=c(-0.9,13),xlab='D',ylab="clusters",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist,kxtot,type='b',lty=2, col=2,cex=1.5,lwd=2)
lines(plist,kVI[,1],type='b',col=1,cex=1.5,lwd=2)
legend(0.1,1.5,c("EDP:y-clusters","EDP:x-clusters","DP"), col=c(2,2,1), lty=c(1,2,1),lwd=c(2,2,2),ncol=2, cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot k
kxtot=rep(0,length(plist))
for (ind in 1:length(plist)){
kxtot[ind]=sum(kxVI[[ind]])
}
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,kVI[,2],type='b',col=2, ylim=c(-0.9,13),xlab='D',ylab="clusters",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist,kxtot,type='b',lty=2, col=2,cex=1.5,lwd=2)
lines(plist,kVI[,1],type='b',col=1,cex=1.5,lwd=2)
lines(plist,kVI.lin,type='b',col=6,cex=1.5,lwd=2)
legend(0.1,1.5,c("EDP:y-clusters","EDP:x-clusters","DP","EDPlin"), col=c(2,2,1,6), lty=c(1,2,1,1),lwd=c(2,2,2,2),ncol=2, cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,kVI[,2],type='b',col=2, ylim=c(-0.9,13),xlab='D',ylab="clusters",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist,kxtot,type='b',lty=2, col=2,cex=1.5,lwd=2)
lines(plist,kVI[,1],type='b',col=1,cex=1.5,lwd=2)
lines(plist,kVI_lin,type='b',col=6,cex=1.5,lwd=2)
legend(0.1,1.5,c("EDP:y-clusters","EDP:x-clusters","DP","EDPlin"), col=c(2,2,1,6), lty=c(1,2,1,1),lwd=c(2,2,2,2),ncol=2, cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot VI distance with true
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,VI_dist[,2],type='b',col=2, ylim=c(-0.5,3),xlab='D',ylab="VI distance",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist,cb_size[,2],type='b',lty=2,col=2,cex=1.5,lwd=2)
lines(plist,VI_dist[,1],type='b',col=1,cex=1.5,lwd=2)
lines(plist,cb_size[,1],type='b',lty=2,col=1,cex=1.5,lwd=2)
lines(plist,VI_dist_lin,type='b',col=6,cex=1.5,lwd=2)
lines(plist,cb_size_lin,type='b',lty=2,col=6,cex=1.5,lwd=2)
legend(0.1,-0.2,c("EDP","DP","EDPlin"), col=c(2,1,6), lty=c(1,1,1),lwd=c(2,2,2),horiz=T,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.25,seg.len = 1)
#Plot VI distance with true
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,VI_dist[,2],type='b',col=2, ylim=c(-0.5,3),xlab='D',ylab="VI distance",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist,cb_size[,2],type='b',lty=2,col=2,cex=1.5,lwd=2)
lines(plist,VI_dist[,1],type='b',col=1,cex=1.5,lwd=2)
lines(plist,cb_size[,1],type='b',lty=2,col=1,cex=1.5,lwd=2)
#lines(plist,VI_dist_lin,type='b',col=6,cex=1.5,lwd=2)
#lines(plist,cb_size_lin,type='b',lty=2,col=6,cex=1.5,lwd=2)
#legend(0.1,-0.2,c("EDP","DP","EDPlin"), col=c(2,1,6), lty=c(1,1,1),lwd=c(2,2,2),horiz=T,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.25,seg.len = 1)
legend(0.1,-0.2,c("EDP","DP"), col=c(2,1), lty=c(1,1),lwd=c(2,2),horiz=T,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.25,seg.len = 1)
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,kVI[,2],type='b',col=2, ylim=c(-0.9,13),xlab='D',ylab="clusters",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist,kxtot,type='b',lty=2, col=2,cex=1.5,lwd=2)
lines(plist,kVI[,1],type='b',col=1,cex=1.5,lwd=2)
lines(plist,kVI_lin,type='b',col=6,cex=1.5,lwd=2)
legend(0.1,1.5,c("EDP:y-clusters","EDP:x-clusters","DP","EDPlin"), col=c(2,2,1,6), lty=c(1,2,1,1),lwd=c(2,2,2,2),ncol=2, cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot VI distance with true
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,VI_dist[,2],type='b',col=2, ylim=c(-0.5,3),xlab='D',ylab="VI distance",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist,cb_size[,2],type='b',lty=2,col=2,cex=1.5,lwd=2)
lines(plist,VI_dist[,1],type='b',col=1,cex=1.5,lwd=2)
lines(plist,cb_size[,1],type='b',lty=2,col=1,cex=1.5,lwd=2)
#lines(plist,VI_dist_lin,type='b',col=6,cex=1.5,lwd=2)
#lines(plist,cb_size_lin,type='b',lty=2,col=6,cex=1.5,lwd=2)
#legend(0.1,-0.2,c("EDP","DP","EDPlin"), col=c(2,1,6), lty=c(1,1,1),lwd=c(2,2,2),horiz=T,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.25,seg.len = 1)
legend(0.1,-0.2,c("EDP","DP"), col=c(2,1), lty=c(1,1),lwd=c(2,2),horiz=T,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.25,seg.len = 1)
save.image("~/Dropbox/MixtureOfExperts/demos/santner/Isotropic/EmE_isotropic_v2.RData")
load("~/Dropbox/MixtureOfExperts/demos/santner/Isotropic/EmE_isotropic_withBenchmarks.RData")
#Plot MSE
par(mfrow=c(1,1),mar=c(2,2,.5,.5)+.1, mgp=c(1, .25, 0))
plot(plist,MSE.l1,type='b',col=3, ylim=c(-0.14,1.1),xlab='D',ylab="MSE",cex=1.5, font=2,font.lab=2,lwd=2)
#lines(plist,EDPCI,type='b',col=2,cex=1.5,lwd=2)
#lines(plist,DPCI,type='b',col=1,cex=1.5,lwd=2)
lines(plist,MSE.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,MSE.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],MSE.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
lines(plist,MSE.rf,type='b',col=7,cex=1.5,lwd=2)
legend(0,0.1,c("DP","EDP","EDPlin","Lasso","GP","TGP","RF"), col=c(1,2,6,3,4,5,7), lty=c(1,1),lwd=c(2,2),ncol=4,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot MAE
par(mfrow=c(1,1),mar=c(2,2,.5,.5)+.1, mgp=c(1, .25, 0))
plot(plist,MAE.l1,type='b',col=3, ylim=c(-0.14,0.8),xlab='D',ylab="MAE",cex=1.5, font=2,font.lab=2,lwd=2)
#lines(plist,EDPCI,type='b',col=2,cex=1.5,lwd=2)
#lines(plist,DPCI,type='b',col=1,cex=1.5,lwd=2)
lines(plist,MAE.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,MAE.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],MAE.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
lines(plist,MAE.rf,type='b',col=7,cex=1.5,lwd=2)
legend(1,0.05,c("DP","EDP","EDPlin","Lasso","GP","TGP","RF"), col=c(1,2,6,3,4,5,7), lty=c(1,1),lwd=c(2,2),ncol=4,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot coverage
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,EC.l1,type='b',col=3, ylim=c(0.6,1),xlab='D',ylab="Coverage",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
#lines(plist[1:maxind],EC.edp[1:maxind],type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],EC.dp[1:maxind],type='b',col=1,cex=1.5,lwd=2)
lines(plist,EC.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,EC.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],EC.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
lines(plist,rep(0.95,length(plist)),col="grey",lwd=2)
legend(0.2,0.66,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot coverage
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,EC.l1,type='b',col=3, ylim=c(0.6,1),xlab='D',ylab="Coverage",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
#lines(plist[1:maxind],EC.edp[1:maxind],type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],EC.dp[1:maxind],type='b',col=1,cex=1.5,lwd=2)
lines(plist,EC.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,EC.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],EC.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
lines(plist,rep(0.95,length(plist)),col="grey",lwd=2)
legend(0.2,0.68,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot credible interval length
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,meancilength.l1,type='b',col=3, ylim=c(-0.5,4),xlab='D',ylab="Mean CI length",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
#lines(plist[1:maxind],meancilength.edp,type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],meancilength.dp,type='b',col=1,cex=1.5,lwd=2)
lines(plist,meancilength.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,meancilength.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],meancilength.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.3,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
#lines(plist[1:maxind],l1error.edp[1:maxind],type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],l1error.dp[1:maxind],type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],l1error.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.15,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
#lines(plist[1:maxind],l1error.edp[1:maxind],type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],l1error.dp[1:maxind],type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],l1error.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.16,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
#lines(plist[1:maxind],l1error.edp[1:maxind],type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],l1error.dp[1:maxind],type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],l1error.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.17,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
#lines(plist[1:maxind],l1error.edp[1:maxind],type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],l1error.dp[1:maxind],type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],l1error.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.18,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
#lines(plist[1:maxind],l1error.edp[1:maxind],type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],l1error.dp[1:maxind],type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],l1error.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.2,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
?write.csv
write.csv(data.frame(p=plist,l1error.l1,l1error.bgp,l1error.tgp,l1error.lin),file="l1error.csv")
write.csv(data.frame(p=plist,meancilength.l1,meancilength.bgp,meancilength.tgp,meancilength.lin),file="meancilength.csv")
write.csv(data.frame(p=plist,EC.l1,EC.bgp,EC.tgp,EC.lin),file="EC.csv")
write.csv(data.frame(p=plist,MSE.l1,MSE.bgp,MSE.tgp,MSE.lin),file="MSE.csv")
kVI_lin
kxtot
write.csv(data.frame(p=plist,DP=kVI[,1],EDP=kVI[,2], EDPx= kxtot,EDPlin=kVI_lin),file="clusters.csv")
write.csv(data.frame(p=plist,DPVI=VI_dist[,1], DPcb=cb_size[,1],EDPVI=VI_dist[,2],EDPcb=cb_size[,2],EDPlinVI=VI_dist_lin, EDPlincb=cb_size_line),file="VIdist.csv")
write.csv(data.frame(p=plist,DPVI=VI_dist[,1], DPcb=cb_size[,1],EDPVI=VI_dist[,2],EDPcb=cb_size[,2],EDPlinVI=VI_dist_lin, EDPlincb=cb_size_lin),file="VIdist.csv")
l1error.lin[p==plist]
p=200
l1error.lin[p==plist]
#Plot MSE
par(mfrow=c(1,1),mar=c(2,2,.5,.5)+.1, mgp=c(1, .25, 0))
plot(plist,MSE.l1,type='b',col=3, ylim=c(-0.14,1.1),xlab='D',ylab="MSE",cex=1.5, font=2,font.lab=2,lwd=2)
#lines(plist,EDPCI,type='b',col=2,cex=1.5,lwd=2)
#lines(plist,DPCI,type='b',col=1,cex=1.5,lwd=2)
lines(plist,MSE.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,MSE.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],MSE.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
lines(plist,MSE.rf,type='b',col=7,cex=1.5,lwd=2)
legend(0,0.1,c("DP","EDP","EDPlin","Lasso","GP","TGP","RF"), col=c(1,2,6,3,4,5,7), lty=c(1,1),lwd=c(2,2),ncol=4,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
l1error.lin[p==plist]
l1error.lin[p==plist]=1.548597
meancilength.lin[p==plist]
meancilength.lin[p==plist]=2.35536
mincilength.lin[p==plist]
mincilength.lin[p==plist]=0.55
maxcilength.lin[p==plist]
maxcilength.lin[p==plist]=10.48
EC.lin[p==plist]
EC.lin[p==plist]=0.854
MAE.lin[p==plist]
MAE.lin[p==plist]=0.7202894
MSE.lin[p==plist]=1.088929
cb_size_lin
cb_size_lin[p==plist]
cb_size_lin[p==plist]=0.2471833
kVI_lin[p==plist]
kVI_lin[p==plist]=3
VI_dist_lin[p==plist]=1.88737
VI_postexp_lin[p==plist]=1.882961
save.image("~/Dropbox/MixtureOfExperts/demos/santner/santner_ISO/Isotropic/EmE_isotropic_withBenchmarks.RData")
write.csv(data.frame(p=plist,l1error.l1,l1error.bgp,l1error.tgp,l1error.lin),file="l1error.csv")
write.csv(data.frame(p=plist,meancilength.l1,meancilength.bgp,meancilength.tgp,meancilength.lin),file="meancilength.csv")
write.csv(data.frame(p=plist,EC.l1,EC.bgp,EC.tgp,EC.lin),file="EC.csv")
write.csv(data.frame(p=plist,MSE.l1,MSE.bgp,MSE.tgp,MSE.lin),file="MSE.csv")
write.csv(data.frame(p=plist,DP=kVI[,1],EDP=kVI[,2], EDPx= kxtot,EDPlin=kVI_lin),file="clusters.csv")
write.csv(data.frame(p=plist,DPVI=VI_dist[,1], DPcb=cb_size[,1],EDPVI=VI_dist[,2],EDPcb=cb_size[,2],EDPlinVI=VI_dist_lin, EDPlincb=cb_size_lin),file="VIdist.csv")
#Plot MSE
par(mfrow=c(1,1),mar=c(2,2,.5,.5)+.1, mgp=c(1, .25, 0))
plot(plist,MSE.l1,type='b',col=3, ylim=c(-0.14,1.1),xlab='D',ylab="MSE",cex=1.5, font=2,font.lab=2,lwd=2)
#lines(plist,EDPCI,type='b',col=2,cex=1.5,lwd=2)
#lines(plist,DPCI,type='b',col=1,cex=1.5,lwd=2)
lines(plist,MSE.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,MSE.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],MSE.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
lines(plist,MSE.rf,type='b',col=7,cex=1.5,lwd=2)
legend(0,0.1,c("DP","EDP","EDPlin","Lasso","GP","TGP","RF"), col=c(1,2,6,3,4,5,7), lty=c(1,1),lwd=c(2,2),ncol=4,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot MSE
par(mfrow=c(1,1),mar=c(2,2,.5,.5)+.1, mgp=c(1, .25, 0))
plot(plist,MSE.l1,type='b',col=3, ylim=c(-0.14,1.1),xlab='D',ylab="MSE",cex=1.5, font=2,font.lab=2,lwd=2)
#lines(plist,EDPCI,type='b',col=2,cex=1.5,lwd=2)
#lines(plist,DPCI,type='b',col=1,cex=1.5,lwd=2)
lines(plist,MSE.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,MSE.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist,MSE.lin,type='b',col=6,cex=1.5,lwd=2)
lines(plist,MSE.rf,type='b',col=7,cex=1.5,lwd=2)
legend(0,0.1,c("DP","EDP","EDPlin","Lasso","GP","TGP","RF"), col=c(1,2,6,3,4,5,7), lty=c(1,1),lwd=c(2,2),ncol=4,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot MAE
par(mfrow=c(1,1),mar=c(2,2,.5,.5)+.1, mgp=c(1, .25, 0))
plot(plist,MAE.l1,type='b',col=3, ylim=c(-0.14,0.8),xlab='D',ylab="MAE",cex=1.5, font=2,font.lab=2,lwd=2)
#lines(plist,EDPCI,type='b',col=2,cex=1.5,lwd=2)
#lines(plist,DPCI,type='b',col=1,cex=1.5,lwd=2)
lines(plist,MAE.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,MAE.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist,MAE.lin,type='b',col=6,cex=1.5,lwd=2)
lines(plist,MAE.rf,type='b',col=7,cex=1.5,lwd=2)
legend(1,0.05,c("DP","EDP","EDPlin","Lasso","GP","TGP","RF"), col=c(1,2,6,3,4,5,7), lty=c(1,1),lwd=c(2,2),ncol=4,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot coverage
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,EC.l1,type='b',col=3, ylim=c(0.6,1),xlab='D',ylab="Coverage",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
#lines(plist[1:maxind],EC.edp[1:maxind],type='b',col=2,cex=1.5,lwd=2)
#lines(plist[1:maxind],EC.dp[1:maxind],type='b',col=1,cex=1.5,lwd=2)
lines(plist,EC.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,EC.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist,EC.lin,type='b',col=6,cex=1.5,lwd=2)
lines(plist,rep(0.95,length(plist)),col="grey",lwd=2)
legend(0.2,0.68,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
meancilength.edp=c(0.5518051730023771, 0.7839028647486943, 0.7179570473556918, 0.8450194108368718,  0.8377833115932694, 0.9468311073184711, 0.9129492781775133, 0.9414651517910688, 0.9112264258633832, 1.2784446654712196, 1.0161213113986995, 1.0527393764179798, 0.9224425690390451, 0.9557534542271835, 1.0085996600481832, 1.0716298980518004, 0.9045036619208816, 1.0131381676095832, 1.0738822622285036, 1.1896266579781072, 1.1765994263427442, 1.0859016484017436, 1.366133295876257)
meancilength.dp=c(0.6892373531340621, 1.155177407938208, 1.004697592962842, 0.988490691154232, 0.9874815878119069, 1.1474480381486283, 1.1303321079623587, 1.1414071024982924,  1.0742774909397619, 1.325496937719263, 1.1659392373453539, 1.2848257383314248, 1.2777271173231102, 1.1124233543992545, 1.173718496377338, 1.196122171678709, 1.0654942926311632, 1.193001882887554, 1.1134866330806017, 1.2406684352300836, 1.2042257532479024, 1.0879082896852152, 1.3137421551215918)
EC.edp=c(0.9716, 0.9408, 0.8804, 0.9368, 0.936, 0.9636, 0.954, 0.9644, 0.9504, 0.9856, 0.9636, 0.9676, 0.9692, 0.9684, 0.9592, 0.9708, 0.9488, 0.9596, 0.97, 0.9736, 0.9704, 0.9656, 0.9708)
EC.dp=c(0.9736, 0.9732, 0.9512, 0.9556, 0.9452, 0.9692, 0.9752, 0.9576, 0.9592, 0.976, 0.9668, 0.9816, 0.9756, 0.9712, 0.9712, 0.9784, 0.9596, 0.9768, 0.9616, 0.9672, 0.9752, 0.9584, 0.978)
l1error.dp=c(.2778644883189885229, .8114141385895649039, .7965898013019411250, .9144361306397439382e, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, .9732653692689633429, 1.018577869385822288, .9770547624763760153, .9942224066167837382, 1.008345345117334757, .9633689865076283665, .9944639949952567282, .9706742041237809149, .9573096059339781805, .9912540585555621453, .9733228880873832090e, .9949255096126810027, 1.011340344541501679, .9561460658195591877, 1.048380676346099438, 1.019189200615140845)
l1error.edp=c(.2116799111910779296, .6430292618563266949, .7838374757919847058, .7326971047252314184, .8294885548352257665, .8426679654023020438, .8182640296170814453, .8722419268364260958, .8484166535949115850, .9575901450953518967, .8976834725528326508, .8984519350882814726, .8069547029705254060, .8625826069628165227, .8983512382042285749, .9005671659603953216, .8370275305306497104, .8749987406485879582, .9014307322173212844, .9565124350939224751, .9714544970209253449, 0.9238911363301419710e, 1.075153261533327020, 1.008280877186718882)
l1error.dp=c(0.2778644883189885229)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, .9732653692689633429, 1.018577869385822288, .9770547624763760153, .9942224066167837382, 1.008345345117334757, .9633689865076283665, .9944639949952567282, .9706742041237809149, .9573096059339781805, .9912540585555621453, .9733228880873832090e, .9949255096126810027, 1.011340344541501679, .9561460658195591877, 1.048380676346099438, 1.019189200615140845)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, .9770547624763760153, .9942224066167837382, 1.008345345117334757, .9633689865076283665, .9944639949952567282, .9706742041237809149, .9573096059339781805, .9912540585555621453, .9733228880873832090e, .9949255096126810027, 1.011340344541501679, .9561460658195591877, 1.048380676346099438, 1.019189200615140845)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, .9942224066167837382, 1.008345345117334757, .9633689865076283665, .9944639949952567282, .9706742041237809149, .9573096059339781805, .9912540585555621453, .9733228880873832090e, .9949255096126810027, 1.011340344541501679, .9561460658195591877, 1.048380676346099438, 1.019189200615140845)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, 0.9942224066167837382, 1.008345345117334757, 0.9633689865076283665, 0.9944639949952567282, 0.9706742041237809149, 0.9573096059339781805, 0.9912540585555621453, 0.9733228880873832090e, 0.9949255096126810027, 1.011340344541501679, 0.9561460658195591877, 1.048380676346099438, 1.019189200615140845)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, 0.9942224066167837382)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, 0.9942224066167837382, 1.008345345117334757, 0.9633689865076283665)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, 0.9942224066167837382, 1.008345345117334757, 0.9633689865076283665, 0.9944639949952567282, 0.9706742041237809149)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, 0.9942224066167837382, 1.008345345117334757, 0.9633689865076283665, 0.9944639949952567282, 0.9706742041237809149, 0.9573096059339781805)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, 0.9942224066167837382, 1.008345345117334757, 0.9633689865076283665, 0.9944639949952567282, 0.9706742041237809149, 0.9573096059339781805, 0.9912540585555621453, 0.9733228880873832090)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, 0.9942224066167837382, 1.008345345117334757, 0.9633689865076283665, 0.9944639949952567282, 0.9706742041237809149, 0.9573096059339781805, 0.9912540585555621453, 0.9733228880873832090, 0.9949255096126810027, 1.011340344541501679)
l1error.dp=c(0.2778644883189885229, 0.8114141385895649039, 0.7965898013019411250, 0.9144361306397439382, .9339101379334611153, .9427315527156543418, .9243647597765439761, 1.013843071030508858, 0.9732653692689633429, 1.018577869385822288, 0.9770547624763760153, 0.9942224066167837382, 1.008345345117334757, 0.9633689865076283665, 0.9944639949952567282, 0.9706742041237809149, 0.9573096059339781805, 0.9912540585555621453, 0.9733228880873832090, 0.9949255096126810027, 1.011340344541501679, 0.9561460658195591877, 1.048380676346099438, 1.019189200615140845)
l1error.edp=c(.2116799111910779296, .6430292618563266949, .7838374757919847058, .7326971047252314184)
l1error.edp=c(.2116799111910779296, .6430292618563266949, .7838374757919847058, .7326971047252314184, .8294885548352257665, .8426679654023020438, .8182640296170814453, .8722419268364260958)
l1error.edp=c(.2116799111910779296, .6430292618563266949, .7838374757919847058, .7326971047252314184, .8294885548352257665, .8426679654023020438, .8182640296170814453, .8722419268364260958, .8484166535949115850, .9575901450953518967, .8976834725528326508, .8984519350882814726)
l1error.edp=c(.2116799111910779296, .6430292618563266949, .7838374757919847058, .7326971047252314184, .8294885548352257665, .8426679654023020438, .8182640296170814453, .8722419268364260958, .8484166535949115850, .9575901450953518967, .8976834725528326508, .8984519350882814726, .8069547029705254060, .8625826069628165227)
l1error.edp=c(.2116799111910779296, .6430292618563266949, .7838374757919847058, .7326971047252314184, .8294885548352257665, .8426679654023020438, .8182640296170814453, .8722419268364260958, .8484166535949115850, .9575901450953518967, .8976834725528326508, .8984519350882814726, .8069547029705254060, .8625826069628165227, .8983512382042285749, .9005671659603953216, .8370275305306497104)
l1error.edp=c(.2116799111910779296, .6430292618563266949, .7838374757919847058, .7326971047252314184, .8294885548352257665, .8426679654023020438, .8182640296170814453, .8722419268364260958, .8484166535949115850, .9575901450953518967, .8976834725528326508, .8984519350882814726, .8069547029705254060, .8625826069628165227, .8983512382042285749, .9005671659603953216, .8370275305306497104, .8749987406485879582, .9014307322173212844, .9565124350939224751)
l1error.edp=c(.2116799111910779296, .6430292618563266949, .7838374757919847058, .7326971047252314184, .8294885548352257665, .8426679654023020438, .8182640296170814453, .8722419268364260958, .8484166535949115850, .9575901450953518967, .8976834725528326508, .8984519350882814726, .8069547029705254060, .8625826069628165227, .8983512382042285749, .9005671659603953216, .8370275305306497104, .8749987406485879582, .9014307322173212844, .9565124350939224751, .9714544970209253449, 0.9238911363301419710, 1.075153261533327020, 1.008280877186718882)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
lines(plist,l1error.edp,type='b',col=2,cex=1.5,lwd=2)
lines(plist,l1error.dp,type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist,l1error.lin,type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.2,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
lines(plist,l1error.edp,type='b',col=2,cex=1.5,lwd=2)
lines(plist,l1error.dp,type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist,l1error.lin,type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.2,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
setwd("~/Dropbox/MixtureOfExperts/demos/santner/santner_ISO/Isotropic")
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
lines(plist,l1error.edp,type='b',col=2,cex=1.5,lwd=2)
lines(plist,l1error.dp,type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist,l1error.lin,type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.2,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot credible interval length
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,meancilength.l1,type='b',col=3, ylim=c(-0.5,4),xlab='D',ylab="Mean CI length",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist,meancilength.edp,type='b',col=2,cex=1.5,lwd=2)
lines(plist,meancilength.dp,type='b',col=1,cex=1.5,lwd=2)
lines(plist,meancilength.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,meancilength.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],meancilength.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.3,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
length(meancilength.edp)
length(p;ist)
length(plist)
#Plot credible interval length
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,meancilength.l1,type='b',col=3, ylim=c(-0.5,4),xlab='D',ylab="Mean CI length",cex=1.5, font=2,font.lab=2,lwd=2,cex.lab=1.4)
lines(plist[plist!=200],meancilength.edp[plist!=200],type='b',col=2,cex=1.5,lwd=2)
lines(plist[plist!=200],meancilength.dp[plist!=200],type='b',col=1,cex=1.5,lwd=2)
lines(plist,meancilength.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,meancilength.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist[plist!=200],meancilength.lin[plist!=200],type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.3,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,2),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
lines(plist,l1error.edp,type='b',col=2,cex=1.5,lwd=2)
lines(plist,l1error.dp,type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist,l1error.lin,type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.2,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
#Plot L1
par(mfrow=c(1,1),mar=c(2.2,2.2,.5,.5)+.1, mgp=c(1.2, .1, 0))
plot(plist,l1error.l1,type='b',col=3, ylim=c(-0.2,1),xlab='D',ylab="L1 error",cex=1.5, font=2,font.lab=2,cex.lab=1.4,lwd=2)
lines(plist,l1error.edp,type='b',col=2,cex=1.5,lwd=2)
lines(plist,l1error.dp,type='b',col=1,cex=1.5,lwd=2)
lines(plist,l1error.bgp,type='b',col=4,cex=1.5,lwd=2)
lines(plist,l1error.tgp,type='b',col=5,cex=1.5,lwd=2)
lines(plist,l1error.lin,type='b',col=6,cex=1.5,lwd=2)
legend(0.2,0.2,c("DP","EDP","EDPlin","Lasso","GP","TGP"), col=c(1,2,6,3,4,5), lty=c(1,1),lwd=c(2,2),ncol=3,cex=1.4,text.font=2,x.intersp=0.25,y.intersp=0.8,seg.len = 1)
setwd("~/Dropbox/MixtureOfExperts/demos/santner/santner_ISO")
save.image("~/Dropbox/MixtureOfExperts/demos/santner/santner_ISO/Isotropic/EmE_isotropic_withBenchmarks.RData")
